{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "uniquePrefix": {
      "type": "string",
      "metadata": {
        "description": "This unique prefix will be used on all the objects created as part of this template. Must be all lower case."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the existing VNet."
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the Resource Group which contains the VNet."
      }
    },
    "subnet1Name": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the subnet to use for the NFS server."
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_D12_V2",
      "allowedValues": [
        "Standard_D12_V2",
        "Standard_D14_V2",
        "Standard_G5",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "Size of the VM used to for the NFS Server."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the VMs in the deployment."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VMs in the deployment."
      }
    },
    "hpcUserName": {
      "type": "string",
      "defaultValue": "hpc",
      "metadata": {
        "description": "User for running HPC applications with shared home directory and SSH public key authentication setup.  This user cannot login from outside the cluster. Pick a valid username otherwise there will be a BadRequest error."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 512,
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "location": "[resourceGroup().location]",
    "ImagePublisher": "OpenLogic",
    "ImageOffer": "CentOS",
    "OSVersion": "7.1",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('subnet1Name'))]",
    "templateLocation": "https://raw.githubusercontent.com/exchmaster/Premium-NFS-Server/master/",
    "masterHostName": "[concat('nfs', parameters('uniquePrefix'), 'vm')]",
    "setupScriptURI": "[concat(variables('templateLocation'), 'setup.sh')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat('nfs', parameters('uniquePrefix'), 'sa')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('nfs', parameters('uniquePrefix'), 'ip')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat('nfs', parameters('uniquePrefix'), 'nic')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/nfs', parameters('uniquePrefix'), 'ip')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('nfs', parameters('uniquePrefix'), 'ip'))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
 

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat('nfs', parameters('uniquePrefix'), 'vm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/nfs', parameters('uniquePrefix'), 'sa')]",
        "[concat('Microsoft.Network/networkInterfaces/nfs', parameters('uniquePrefix'), 'nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "osProfile": {
          "computername": "[concat('nfs', parameters('uniquePrefix'), 'vm')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[variables('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://nfs',parameters('uniquePrefix'),'sa.blob.core.windows.net/nfsvm/nfsvm.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [ 
            { 
            "name": "datadisk0", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 0, 
            "vhd": { 
              "Uri":  "[concat('http://nfs',parameters('uniquePrefix'),'sa.blob.core.windows.net/nfsvm/datadisk0.vhd')]" 
              }, 
            "caching": "None", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk1", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 1, 
            "vhd": { 
              "Uri":  "[concat('http://nfs',parameters('uniquePrefix'),'sa.blob.core.windows.net/nfsvm/datadisk1.vhd')]" 
              }, 
            "caching": "None", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk2", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 2, 
            "vhd": { 
              "Uri":  "[concat('http://nfs',parameters('uniquePrefix'),'sa.blob.core.windows.net/nfsvm/datadisk2.vhd')]" 
              }, 
            "caching": "None", 
            "createOption": "Empty" 
            }, 
            { 
            "name": "datadisk3", 
            "diskSizeGB": "[parameters('dataDiskSize')]", 
            "lun": 3, 
            "vhd": { 
              "Uri":  "[concat('http://nfs',parameters('uniquePrefix'),'sa.blob.core.windows.net/nfsvm/datadisk3.vhd')]" 
              }, 
            "caching": "None", 
            "createOption": "Empty" 
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nfs', parameters('uniquePrefix'), 'nic'))]"
            }
          ]
        }
      }
    },  
   {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat('nfs', parameters('uniquePrefix'), 'vm/ext')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/nfs', parameters('uniquePrefix'), 'vm')]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[variables('setupScriptURI')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash setup.sh ',' ', variables('masterHostName'),' ', parameters('hpcUserName'))]"
        }
      }
    }
  ]
}

